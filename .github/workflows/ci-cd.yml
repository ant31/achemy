name: Build, Test, and Publish

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0
  pull_request:
    branches: [ main ]

permissions:
  contents: read # Needed to check out the repository
  id-token: write # Needed for trusted publishing to PyPI

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi # Optional: Define environment for PyPI publishing secrets/protection rules
      url: https://pypi.org/p/aiochemy # Optional: Link to PyPI project

    # Add PostgreSQL service container
    services:
      postgres:
        image: postgres:latest # Use the latest official PostgreSQL image
        env:
          POSTGRES_USER: activealchemy # Match default test user
          POSTGRES_PASSWORD: activealchemy # Match default test password
          POSTGRES_DB: pythonapp-test # Match default test database
        ports:
          - 5434:5432 # Map container port 5432 to host port 5434 (matching test default)
        # Add a health check to wait for the database to be ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        pipx install poetry

    - name: Install dependencies
      run: |
        # Install project dependencies, but not the project itself as editable
        # This is often better for CI environments
        poetry install --no-interaction

    - name: Run checks (linting, formatting, etc.)
      run: |
        make check

    - name: Run tests
      # Provide environment variables for the tests to connect to the service DB
      env:
        TEST_DB_USER: activealchemy
        TEST_DB_PASSWORD: activealchemy
        TEST_DB: pythonapp-test
        TEST_DB_HOST: localhost # Service is accessible via localhost
        TEST_DB_PORT: 5434 # Use the mapped host port
      run: |
        make test

    - name: Build package
      # Only build if it's a tag push, as build artifacts aren't needed otherwise
      # and publishing step depends on this output.
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      run: |
        poetry build

    - name: Publish package to PyPI
      # Only publish if it's a tag push to avoid publishing on every main branch push/PR
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      # No 'with: password:' needed when using trusted publishing.
      # Ensure your PyPI project is configured for trusted publishing from this repository/workflow.
      # See: https://docs.pypi.org/trusted-publishers/
